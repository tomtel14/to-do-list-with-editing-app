{"version":3,"sources":["components/ToDoForm.js","components/ToDo.js","components/ToDoList.js","App.js","index.js"],"names":["ToDoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","ToDo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","ToDoList","setTodos","newTodos","length","alert","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OA+DeA,MA7Df,SAAkBC,GAAQ,IAAD,EAEGC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAF5C,mBAEhBC,EAFgB,KAETC,EAFS,KAIjBC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,UAChB,IAEH,IAAMC,EAAe,SAACC,GACpBP,EAASO,EAAEC,OAAOV,QAepB,OACE,sBAAMW,UAAU,YAAYC,SAbT,SAACH,GACpBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGRC,EAAS,KAKT,SAEGL,EAAME,KACL,qCACE,uBACEoB,KAAK,OACLC,YAAY,cACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,mBAAlB,uBAGA,qCACE,uBACEQ,KAAK,OACLC,YAAY,cACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,mBAAlB,4B,eCZGa,MAtCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EAErC9B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAJoD,mBAEtDD,EAFsD,KAEhD8B,EAFgD,KAe7D,OAAI9B,EAAKe,GACA,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATV,SAAAZ,GACnB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACNf,GAAI,KACJd,MAAO,QAQJyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,UACE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACE,cAAC,IAAD,CACEuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEZ,cAAC,IAAD,CACEuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAClDP,UAAU,mBAXyDqB,OC6B9DG,MAlDf,WAAqB,IAAD,EAEQrC,mBAAS,IAFjB,mBAEX2B,EAFW,KAEJW,EAFI,KAuClB,OACE,sBAAKzB,UAAU,gBAAf,UACE,4DACA,cAAC,EAAD,CAAUC,SAtCE,SAACmB,GACf,IAAMM,EAAQ,CAAIN,GAAJ,mBAAaN,IAEF,IAArBM,EAAKb,KAAKoB,OAIdF,EAASC,GAHPE,MAAM,qBAmCN,qBAAK5B,UAAU,YAAf,SACE,cAAC,EAAD,CAAMc,MAAOA,EAAOC,aArBL,SAAAZ,GACnB,IAAI0B,EAAef,EAAMK,KAAI,SAAAC,GAI3B,OAHIA,EAAKjB,KAAOA,IACdiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASI,IAc2Cb,WAXnC,SAAAb,GACjB,IAAM2B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAX,GAAI,OAAIA,EAAKjB,KAAOA,KAExDsB,EAASK,IAQmEb,WA9B3D,SAACe,EAAQC,GAEG,IAAzBA,EAAS1B,KAAKoB,OAIlBF,GAAS,SAAAS,GAAI,OAAIA,EAAKf,KAAI,SAAAgB,GAAI,OAAKA,EAAKhC,KAAO6B,EAASC,EAAWE,QAHjEP,MAAM,2BCTGQ,MARf,WACE,OACE,qBAAKpC,UAAU,WAAf,SACE,cAAC,EAAD,OCHNqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d9d73f55.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction ToDoForm(props) {\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [])\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    })\n\n    setInput('');\n  }\n\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n\n      {props.edit ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Add an item\"\n            value={input}\n            name=\"text\"\n            className=\"todo-input edit\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-button edit\">Update</button>\n        </>\n      ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Add an item\"\n              value={input}\n              name=\"text\"\n              className=\"todo-input\"\n              onChange={handleChange}\n              ref={inputRef}\n            />\n            <button className=\"todo-button edit\">Add item</button>\n          </>\n        )}\n\n    </form>\n  )\n}\n\nexport default ToDoForm;\n","import React, { useState } from 'react';\nimport ToDoForm from './ToDoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\n\nfunction ToDo({ todos, completeTodo, removeTodo, updateTodo }) {\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  })\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    })\n  }\n\n  if (edit.id) {\n    return <ToDoForm edit={edit} onSubmit={submitUpdate} />\n  }\n\n  return todos.map((todo, index) => (\n    <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ))\n}\n\nexport default ToDo;\n","import React, { useState } from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDo from './ToDo';\n\nfunction ToDoList() {\n\n  const [todos, setTodos] = useState([]);\n\n  const addToDo = (todo) => {\n    const newTodos = [todo, ...todos];\n\n    if (todo.text.length === 0) {\n      alert('Input required')\n      return;\n    }\n    setTodos(newTodos);\n  }\n\n  const updateTodo = (todoId, newValue) => {\n\n    if (newValue.text.length === 0) {\n      alert('Input required');\n      return;\n    }\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\n  }\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete\n      }\n      return todo;\n    })\n    setTodos(updatedTodos);\n  }\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id)\n\n    setTodos(removeArr);\n  }\n\n  return (\n    <div className=\"todo-app-cont\">\n      <h1>What's the plan for today?</h1>\n      <ToDoForm onSubmit={addToDo} />\n      <div className=\"todo-cont\">\n        <ToDo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\n      </div>\n    </div>\n  )\n}\n\nexport default ToDoList\n","import React from 'react';\nimport './App.scss';\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}